Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.



var productExceptSelf = function(nums) {
    const length = nums.length;
    const leftProduct = new Array(length).fill(1);
    const rightProduct = new Array(length).fill(1);
    const result = new Array(length).fill(1);

    for (let i = 1; i < length; i++) {
        leftProduct[i] = leftProduct[i - 1] * nums[i - 1];
        rightProduct[length - i - 1] = rightProduct[length - i] * nums[length - i];
    }

    for (let i = 0; i < length; i++) {
        result[i] = leftProduct[i] * rightProduct[i];
    }

    return result;
};
